name: Helm deploy
description: 'Deploy helm chart to cluster'

inputs:
  helm_version:
    description: "Helm version"
    required: false
    default: 'v3.18.4'
  helmfile-version:
    description: "helmfile version"
    default: "v1.1.8"
    required: false
  helm-diff-plugin-version:
    description: "Version of the helm diff plugin to install"
    default: "v3.12.3"
    required: false
  install-helm-plugins:
    description: "Install Helm plugins"
    required: false
    default: 'yes'
  cluster:
    description: "Cluster name"
    required: true
  release:
    description: "Release name"
    required: false
  chart:
    description: "Chart name"
    required: false
    default: 'skateboard'
  namespace:
    description: "Namespace of env"
    required: true
  tag:
    description: "Image tag"
    required: false
    default: 'latest'
  values_path:
    description: "Path of values.yaml"
    required: true
  role-to-assume:
    description: >-
      Use the provided credentials to assume an IAM role and configure the Actions
      environment with the assumed role credentials rather than with the provided
      credentials
    required: false
  aws-region:
    description: 'AWS Region, e.g. ap-southeast-1'
    required: false
    default: 'ap-southeast-1'

runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.role-to-assume }}
        aws-region: ${{ inputs.aws-region }}

    - name: Setup Helmfile
      uses: mamezou-tech/setup-helmfile@v2.1.0
      with:
        helm-version: ${{ inputs.helm_version }}
        install-helm-plugins: ${{ inputs.install-helm-plugins }}

    - name: Generate kubeconfig
      shell: bash
      run: aws eks update-kubeconfig --name ${{ inputs.cluster }}

    - name: Helmfile deploy all release
      shell: bash
      if: ${{ inputs.release == '' }}
      env:
        IMAGE_TAG: ${{ inputs.tag }}
      run: |
        helmfile apply \
          --file ${{ inputs.values_path }} \
          --environment ${{ inputs.namespace }}

    - name: Helmfile deploy
      shell: bash
      if: ${{ inputs.release != '' }}
      env:
        IMAGE_TAG: ${{ inputs.tag }}
      run: |
        helmfile apply \
          --file ${{ inputs.values_path }} \
          --environment ${{ inputs.namespace }} \
          --selector name=${{ inputs.release }}
